////////////////////////////////
/////   app.js
////////////////////////////////

'use strict';

/**
 * @ngdoc overview
 * @name todoApp
 * @description
 * # todoApp
 *
 * Main module of the application.
 */
angular
    .module('todoApp', [
        'ngAnimate',
        'ngCookies',
        'ngResource',
        'ngRoute',
        'ngSanitize',
        'ngTouch',
        'ui.sortable', // Loading sortable module
        'LocalStorageModule'
    ])
    .config(['localStorageServiceProvider', function(localStorageServiceProvider){
        localStorageServiceProvider.setPrefix('ycp'); // preparing local storage
    }])

    .config(function ($routeProvider) {
        $routeProvider
            .when('/', {
                templateUrl: 'views/main.html',
                controller: 'MainCtrl',
                controllerAs: 'main'
            })
            .when('/about', {
                templateUrl: 'views/about.html',
                controller: 'AboutCtrl',
                controllerAs: 'about'
            })
            .otherwise({
                redirectTo: '/'
            });
    });



////////////////////////////////
/////   main.js
////////////////////////////////

'use strict';

/**
 * @ngdoc function
 * @name todoApp.controller:MainCtrl
 * @description
 * # MainCtrl
 * Controller of the todoApp
 */
angular.module('todoApp')
    .controller('MainCtrl',['$scope',function($scope){

// hardcoded todo's since there's no database connected yet.

        $scope.todos = [
            {'title':'Add a new item','done':false},
            {'title':'This item is done','done':true},
            {'title':'Persist data to database','done':false},
            {'title':'Store data on local disk for offline use','done':false},
            {'title':'Drag & drop to change position','done':true},
            {'title':'Remove all items that are done','done':true},
            {'title':'Form validation: prevent blank inputs','done':true},
            {'title':'Clear input field after adding new todo','done':true},
            {'title':'Add searchbox to filter todo items','done':false},
            {'title':'Remove individual todo','done':true},
            {'title':'Unit testing with Karma','done':true},
            {'title':'Modify todos','done':false},
            {'title':'Realtime sync using websockets','done':false},
            {'title':'Send source code to Tess for review','done':true},
            {'title':'Focus on input field to add new items instantly','done':true},
            {'title':'Move completed items to bottom','done':false},
            {'title':'Optimize for mobile use (long sentences breaks layout)','done':false}

        ];

        $scope.addToDo = function(){
            $scope.todos.push({'title':$scope.newToDo,'done':false});
            $scope.newToDo = ''; // clears the input field after a new item has been submitted
        };


        $scope.removeTodo = function (index) {
            $scope.todos.splice(index, 1);
        };


        $scope.removeCompleted = function() {
            $scope.todos = $scope.todos.filter(function(item){
                return !item.done;
            });
        };

    }]);
